.. _documentation-label:

Documentation
=============

In the following sections explain all relevant input files and corresponding parameters.

.. _inputfiles-label:

Inputfiles
----------

.. _inputjson-label: 

:code:`input.json`
^^^^^^^^^^^^^^^^^^

- :code:`sp_control` dictionary containing options for single point calculation:
   - :code:`qc_prog` string defining the quantum chemistry program (default: :code:`"turbomole"`).
   - :code:`params` dictionary containing parameters for single point calculation (default: :code:`null`). 
      - here you can set all parameters provided by ASE to control the single point calculations started by pyIETS. If you use turbomole a list of all parameters can be seen here ASE-turbomole_.

- :code:`sp_restart` if set to :code:`true` looks for :code:`mode_folder` and :code:`output_folder` to restart old calculations. This can save a lot of time and resources (default: :code:`false`). Do not change to :code:`true` if you changed parameters after the prior run of pyIETS.

- :code:`artaios` absolute path to the folder where artaios is installed (default: :code:`null`).

- :code:`artaios_bin` relative to :code:`artaios` path to artaios executable (default: :code:`bin/artaios`).

- :code:`iets_out_file` name or path of output file. This file is generated by running pyIETS (default: :code:`iets.dat`).

- :code:`mp` number of cores to be used. pyIETS will start TURBOMOLE and ARTAIOS on different cores. Depending on the functional and basis set you use the single point calculations are the most time consuming part of the calculation. The number of single point calculations performed by the pyIETS is proportional to the number of modes one specifies in :code:`modes`. A total of 2* :code:`modes` + 1 single point calculations are performed. For highest efficiency choose a multiple of this value (default: :code:`1`).

- :code:`modes` either a string or a list of integers specifying the modes for which pyIETS calculates inelastric tunneling intensities. If a list is provided the vibrational modes in the :code:`snf.out` file are accessed by index. Note however, indexing starts from 0. That means modes 1, 2, 3 in the :code:`snf.out` file are accessed by :code:`[0, 1, 2]` (default: :code:`"all"`).

.. _artaiosin-label: 

:code:`artaios.in`
^^^^^^^^^^^^^^^^^^

This input file will be used to perform the electron transport calculation.
Note: the :code:`print_green` parameter has to be provided explicitly!


.. _snfout-label: 

:code:`snf.out`
^^^^^^^^^^^^^^^

.. _ASE-turbomole: https://wiki.fysik.dtu.dk/ase/ase/calculators/turbomole.html

This file has to be created by a prior SNF calculations to calculate vibrational normal modes.

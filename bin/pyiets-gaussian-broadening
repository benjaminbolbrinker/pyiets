#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
import numpy as np
import matplotlib.pyplot as plt


def first(x):
    return x[0]


def gaussian(x):
    return np.exp(-(x/sigma)**2/2)


if __name__ == '__main__':
    infilename = sys.argv[1]
    outfilename = sys.argv[2]
    sampling = int(sys.argv[3])
    savefig = sys.argv[4]

    iets = np.loadtxt(infilename, dtype={
        'names': ('mode_idx', 'wavenumber', 'energy', 'intensity'),
        'formats': ('i8', 'f8', 'f8', 'f8')
    })
    wavenum_sample = np.linspace(min(iets['wavenumber']),
                                 max(iets['wavenumber']),
                                 num=sampling)
    signal = np.zeros(sampling)
    pair = list(zip(wavenum_sample, signal))
    signal_pair = list(zip(iets['wavenumber'], iets['intensity']))
    pair += signal_pair
    pair.sort(key=first)

    p_wavenum = [i[0] for i in pair]
    i_wavenum = [i[1] for i in pair]
    N = 50
    sigma = 200
    dx = float(3940-3930)/N
    gx = np.arange(-3*sigma, 3*sigma, dx)
    gauss = [gaussian(x) for x in gx]
    result = np.convolve(i_wavenum, gauss, mode='same')
    plt.plot(p_wavenum, i_wavenum)
    plt.savefig(savefig)
    np.savetxt(outfilename, list(zip(iets['mode_idx'],
                                     iets['wavenumber'],
                                     iets['energy'],
                                     iets['intensity'])),
               # fmt='{%d} {%.18e} {%d} {%.18e}')
               fmt=['%d', '%.18e', '%.18e', '%.18e'])
